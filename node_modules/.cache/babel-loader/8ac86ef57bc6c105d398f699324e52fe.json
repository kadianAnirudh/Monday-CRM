{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aniru\\\\Desktop\\\\murdock\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TicketCard from '../components/TicketCard';\nimport axios from 'axios';\nimport { useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [tickets, setTickets] = useState(null);\n  useEffect(async () => {\n    const response = await axios.get('http://localhost:8000/tickets');\n    const dataObjects = response.data.data; // object  keys can create an array of ID vlaues \n\n    const arrayOfKeys = Object.keys(dataObjects);\n    const arrayOfData = Object.keys(dataObjects).map(key => dataObjects[key]);\n  }, []);\n  const colors = ['rgb(255,179,186)', 'rgb(255,223,186)', 'rgb(255,225,186)', 'rgb(186,255,201)', 'rgb(186,255,255)']; // ...new Set() creates an array of objects that are unique, since the fN is run wrt categories only, an array of categories is created.\n\n  const uniqueCategories = [// Set creates a group of unique values\n  ...new Set(tickets === null || tickets === void 0 ? void 0 : tickets.map(_ref => {\n    let {\n      category\n    } = _ref;\n    return category;\n  }))]; // category is the only one chosen here because we need need quarters to appear only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-container\",\n      children: tickets && (uniqueCategories === null || uniqueCategories === void 0 ? void 0 : uniqueCategories.map((uniqueCategory, categoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", uniqueCategory]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 1\n        }, this), tickets.filter(ticket => ticket.category === uniqueCategory).map((filteredTicket, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n          id: _index,\n          color: colors[categoryIndex] || colors[0],\n          ticket: filteredTicket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 3\n        }, this))]\n      }, categoryIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"khllzU6YX118rEAVTRJ1hqqu0W8=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","TicketCard","axios","useState","useEffect","useContext","Dashboard","tickets","setTickets","response","get","dataObjects","data","arrayOfKeys","Object","keys","arrayOfData","map","key","colors","uniqueCategories","Set","category","uniqueCategory","categoryIndex","filter","ticket","filteredTicket","_index"],"sources":["C:/Users/aniru/Desktop/murdock/src/pages/Dashboard.js"],"sourcesContent":["import React from 'react'\r\nimport TicketCard from '../components/TicketCard'\r\nimport axios from 'axios';\r\nimport { useState, useEffect , useContext } from 'react';\r\n\r\nconst Dashboard = () => {\r\n\r\nconst[tickets, setTickets] = useState(null)\r\n\r\nuseEffect(async () => {\r\nconst response = await axios.get('http://localhost:8000/tickets')\r\n\r\nconst dataObjects = response.data.data\r\n\r\n// object  keys can create an array of ID vlaues \r\nconst arrayOfKeys = Object.keys(dataObjects)\r\nconst arrayOfData = Object.keys(dataObjects).map((key)=> dataObjects[key])\r\n}, [])\r\n\r\nconst colors = [\r\n  'rgb(255,179,186)',\r\n  'rgb(255,223,186)',\r\n  'rgb(255,225,186)',\r\n  'rgb(186,255,201)',\r\n  'rgb(186,255,255)',\r\n]\r\n\r\n// ...new Set() creates an array of objects that are unique, since the fN is run wrt categories only, an array of categories is created.\r\nconst uniqueCategories = [\r\n  // Set creates a group of unique values\r\n  ...new Set(tickets?.map(({category})=>category))\r\n]\r\n\r\n// category is the only one chosen here because we need need quarters to appear only once\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n<h1> My Projects</h1>\r\n    \r\n    <div className=\"ticket-container\">\r\n      {/* If ticket exists, then unique category ( an array of 2 values should be mapped in a way that it created h3 with array object ) */}\r\n{tickets && uniqueCategories?.map((uniqueCategory, categoryIndex)=> (\r\n<div key={categoryIndex}>\r\n<h3> {uniqueCategory}</h3>\r\n\r\n{tickets.filter((ticket) => ticket.category === uniqueCategory)\r\n.map((filteredTicket, _index) => (\r\n  <TicketCard \r\n  id={_index}\r\n  color={colors[categoryIndex] || colors[0]}\r\n  ticket={filteredTicket}\r\n/>\r\n))\r\n}\r\n</div>\r\n\r\n))}\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA+BC,UAA/B,QAAiD,OAAjD;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAExB,MAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAArC;EAEAC,SAAS,CAAC,YAAY;IACtB,MAAMK,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,+BAAV,CAAvB;IAEA,MAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAT,CAAcA,IAAlC,CAHsB,CAKtB;;IACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAApB;IACA,MAAMK,WAAW,GAAGF,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBM,GAAzB,CAA8BC,GAAD,IAAQP,WAAW,CAACO,GAAD,CAAhD,CAApB;EACC,CARQ,EAQN,EARM,CAAT;EAUA,MAAMC,MAAM,GAAG,CACb,kBADa,EAEb,kBAFa,EAGb,kBAHa,EAIb,kBAJa,EAKb,kBALa,CAAf,CAdwB,CAsBxB;;EACA,MAAMC,gBAAgB,GAAG,CACvB;EACA,GAAG,IAAIC,GAAJ,CAAQd,OAAR,aAAQA,OAAR,uBAAQA,OAAO,CAAEU,GAAT,CAAa;IAAA,IAAC;MAACK;IAAD,CAAD;IAAA,OAAcA,QAAd;EAAA,CAAb,CAAR,CAFoB,CAAzB,CAvBwB,CA4BxB;;EAEE,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACJ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADI,eAGA;MAAK,SAAS,EAAC,kBAAf;MAAA,UAEHf,OAAO,KAAIa,gBAAJ,aAAIA,gBAAJ,uBAAIA,gBAAgB,CAAEH,GAAlB,CAAsB,CAACM,cAAD,EAAiBC,aAAjB,kBAClC;QAAA,wBACA;UAAA,gBAAMD,cAAN;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,EAGChB,OAAO,CAACkB,MAAR,CAAgBC,MAAD,IAAYA,MAAM,CAACJ,QAAP,KAAoBC,cAA/C,EACAN,GADA,CACI,CAACU,cAAD,EAAiBC,MAAjB,kBACH,QAAC,UAAD;UACA,EAAE,EAAEA,MADJ;UAEA,KAAK,EAAET,MAAM,CAACK,aAAD,CAAN,IAAyBL,MAAM,CAAC,CAAD,CAFtC;UAGA,MAAM,EAAEQ;QAHR;UAAA;UAAA;UAAA;QAAA,QAFD,CAHD;MAAA,GAAUH,aAAV;QAAA;QAAA;QAAA;MAAA,QADY,CAAJ;IAFJ;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CAvDD;;GAAMlB,S;;KAAAA,S;AAyDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}